/**
 * 
 */
package com.yhb.controller;

import java.math.BigDecimal;
import java.util.Map;
import java.util.Objects;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.google.common.collect.Maps;
import com.yhb.bean.entity.*;
import com.yhb.service.bank.BaseBankcardService;
import com.yhb.service.current.DailyRevenueService;
import com.yhb.service.user.AccountsUsersBalancesService;
import com.yhb.service.user.AccountsUsersService;
import com.yhb.service.user.DealOrderService;
import com.yhb.service.common.ProfitTableService;
import com.yhb.util.DecimalUtils;
import com.yhb.util.StringUtil;
import org.apache.commons.collections.map.HashedMap;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;

import com.yhb.base.BaseController;
import com.yhb.util.cache.RedisCache;
import com.yhb.util.json.SpringUtils;

/**
 * Copyright: Copyright (c) 2017 LanRu-Caifu
 * 
 * @ClassName: AccountsUsersCenterController.java
 * @Description: 用户中心
 * @author:Krx
 * @date: 2017年4月27日 下午3:05:11
 */
@Controller
@RequestMapping("user/")
public class AccountsUsersCenterController extends BaseController {
	
	@Autowired
	AccountsUsersService usersService;
	@Autowired
	RedisCache cache;
	@Autowired
	DealOrderService orderService;
	@Autowired
	AccountsUsersBalancesService banlanceService;
	@Autowired
	ProfitTableService profitTableService;
	@Autowired
	BaseBankcardService bankService;
	@Autowired
	DailyRevenueService dailyRevenueService;

	String token = "569abb27c67d4df3b43c7db2ae3ebd14d3d49d44-cb50-4314-9a6a-53b653eebbe2";

	/**
	 * 
	 * @Description: 个人中心
	 * @param: map
	 * @return：json,
	 @RequestBody Map<String, String> param
	 * @author: Krx
	 * @date: 2017年5月12日 上午9:25:55
	 */
	@RequestMapping("info")
	public void getUserInfo(HttpServletResponse response,@RequestBody Map<String, String> param) {

		// 验证token 是否存在
		if (cache.tokenExit(param.get("token"))) {
			returnMap = Maps.newHashMap();

			// 获取用户信息
			AccountsUsers users = cache.getUserRedis(param.get("token"), 1, AccountsUsers.class);
			// 用户昨日收益 yesterday 信息和累计收益 accumulate 总资产 total 可用余额：balance 冻结
			// freeze 活期宝 current 积分 points
			returnMap = profitTableService.getUserIncomeAnd(users.getUserid());
			// 用户余额 冻结金额 活期宝 积分 总资产
			AccountsUsersBalances balance = banlanceService.selectByUserId(users.getUserid());

			returnMap.put("total", balance.getUserbalance().add(balance.getUserfreeze()).add(balance.getUsercurrent())); // 总资产
			returnMap.put("balance", balance.getUserbalance()); // 余额
			returnMap.put("balance", balance.getUserfreeze()); // 冻结金额
			returnMap.put("current", balance.getUsercurrent()); // 活期金额
			returnMap.put("points", balance.getUserjifen()); // 用户积分

			returnVo.setStatus(true);
			returnVo.setDatas(returnMap);
		}
		SpringUtils.renderJson(response, returnVo);

	}

	/**
	 * 
	 * @Description: 获取用户等级和认证信息
	 *
	 * @param:param
	 * @return：返回结果描述  ,
	 @RequestBody Map<String, String> param
	 * @author: Krx
	 * @date: 2017年5月12日 下午1:17:57
	 */
	@RequestMapping("grade")
	public void getUserFourFactorIsOk(HttpServletResponse response,@RequestBody Map<String, String> param) {
		// 验证token 是否存在
		if (cache.tokenExit(param.get("token"))) {
			returnMap = Maps.newHashMap();
			// 获取用户等级信息
			AccountsUsers users = cache.getUserRedis(param.get("token"), 1, AccountsUsers.class);

			returnMap.put("idCard", users.getCardid() == null ? false : true);
			returnMap.put("bankCard", bankService.selectUserBankInfoByUserId(users.getUserid()) == null ? false : true);
			returnMap.put("payPwd ", users.getCheckpassword() == null ? false : true);
			returnMap.put("insur", users.getUserlevel() == 1 ? false : true);

			returnVo.setStatus(true);
			returnVo.setDatas(returnMap);

		}
		SpringUtils.renderJson(response, returnVo);
	}

	/**
	 *
	 * @Description: 获取用户活期宝信息
	 *
	 * @param:param,@RequestBody Map<String, String> paramo
	 * @return：返回结果描述
	 * @author: Krx
	 * @date: 2017年5月12日 下午1:17:57
	 */
	@RequestMapping("current")
	public void getCurrentTreasure(HttpServletResponse response,@RequestBody Map<String, String> param) {
		// 验证token 是否存在
		if (cache.tokenExit(param.get("token"))) {

			returnMap = Maps.newHashMap();
			// 获取用户等级信息
			AccountsUsers users = cache.getUserRedis(param.get("token"), 1, AccountsUsers.class);
			//获取用户活期宝
			AccountsUsersBalances balances = banlanceService.selectByUserId(users.getUserid());
			if (StringUtil.isNotNull(balances)) {
				ProfitTable profitTable = profitTableService.getProfitByUserId(users.getUserid());

				returnMap.put("currBalance", balances.getUsercurrent()); //活期宝余额
				returnMap.put("yesterday", profitTable.getTodayHbtotal()); //根据静态字段获取用户的昨日活期宝收益
				returnMap.put("total", profitTable.getHbtotal()); //根据静态字段获取用户的累计活期宝收益

				DailyRevenue revenue = dailyRevenueService.getDailyRevenue(); //获取活期宝利率

				BigDecimal rate = BigDecimal.ZERO;
				if (StringUtil.isNotNull(revenue)) {
					rate = DecimalUtils.getYearRates(revenue.getRevenue().doubleValue());
				}
				returnMap.put("rate", rate); //活期宝利率

				returnVo.setStatus(true);
				returnVo.setDatas(returnMap);
			}
		}
		SpringUtils.renderJson(response, returnVo);

	}

}
